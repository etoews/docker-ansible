FROM alpine:3.9 as builder

RUN set -eux \
	&& apk add --no-cache \
		bc \
		curl \
		gcc \
		git \
		libffi-dev \
		make \
		musl-dev \
		openssl-dev \
		python3 \
		python3-dev

ARG VERSION
RUN set -eux \
	&& if [ "${VERSION}" = "latest" ]; then \
		pip3 install --no-cache-dir --no-compile ansible; \
	else \
		pip3 install --no-cache-dir --no-compile "ansible>=${VERSION},<$(echo "${VERSION}+0.1" | bc)"; \
	fi \
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf

RUN set -eux \
	&& pip3 install --no-cache-dir --no-compile dnspython \
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf

RUN set -eux \
	&& pip3 install --no-cache-dir --no-compile mitogen \
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf

RUN set -eux \
	&& pip3 install --no-cache-dir --no-compile botocore boto boto3 \
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf

RUN set -eux \
	&& pip3 install --no-cache-dir --no-compile awscli \
	&& rm -r /usr/lib/python3.6/site-packages/awscli/examples \
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf \
	&& aws --version 2>&1 | grep -E '^aws-cli/[.0-9]+'

RUN set -eux \
	&& YQ="$( curl -L -sS -o /dev/null -w %{url_effective} https://github.com/mikefarah/yq/releases/latest | sed 's/^.*\///g' )" \
	&& curl -L -sS https://github.com/mikefarah/yq/releases/download/3.2.1/yq_linux_amd64 > /usr/bin/yq \
	&& chmod +x /usr/bin/yq

RUN set -eux \
	&& git clone https://github.com/kubernetes-sigs/aws-iam-authenticator /tmp/aws-iam-authenticator \
	&& cd /tmp/aws-iam-authenticator \
	&& IAM_AUTH_VERSION="$( git tag --sort=-creatordate \
		| grep -E 'v[0-9]+\.[0-9]+\.[0-9]+$' \
		| head -1 \
		| sed 's/^v//g' \
	)" \
	&& curl -sS -L -b cookies.txt -c cookies.txt \
		-o /usr/bin/aws-iam-authenticator \
		-H "User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.89 Safari/537.36" \
		"https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v${IAM_AUTH_VERSION}/aws-iam-authenticator_${IAM_AUTH_VERSION}_linux_amd64" \
	&& chmod +x /usr/bin/aws-iam-authenticator \
	&& aws-iam-authenticator version | grep "\"${IAM_AUTH_VERSION}\""

RUN set -eux \
	&& pip3 install --no-cache-dir --no-compile openshift \
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf

RUN set -eux \
	&& curl -sS -L -o /usr/bin/kubectl \
		https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
	&& chmod +x /usr/bin/kubectl \
	&& kubectl version --client --short=true 2>&1 | grep -E 'v[.0-9]+'

RUN set -eux \
	&& curl -sS -L -o /tmp/openshift-client-linux.tar.gz https://mirror.openshift.com/pub/openshift-v4/clients/ocp/stable/openshift-client-linux.tar.gz \
	&& mkdir /tmp/openshift-client-linux/ \
  && tar -xzf /tmp/openshift-client-linux.tar.gz -C /tmp/openshift-client-linux/ \
	&& mv /tmp/openshift-client-linux/oc /usr/bin/oc-dynamically-linked \
	&& echo -e '#!/bin/sh\n/lib/ld-musl-x86_64.so.1 --library-path /lib /usr/bin/oc-dynamically-linked "$@"' > /usr/bin/oc \
	&& chmod +x /usr/bin/oc \
	&& oc version --client

FROM alpine:3.9 as production
ARG VERSION
# https://github.com/opencontainers/image-spec/blob/master/annotations.md
#LABEL "org.opencontainers.image.created"=""
#LABEL "org.opencontainers.image.version"=""
#LABEL "org.opencontainers.image.revision"=""
LABEL "maintainer"="cytopia <cytopia@everythingcli.org>"
LABEL "org.opencontainers.image.authors"="cytopia <cytopia@everythingcli.org>"
LABEL "org.opencontainers.image.vendor"="cytopia"
LABEL "org.opencontainers.image.licenses"="MIT"
LABEL "org.opencontainers.image.url"="https://github.com/cytopia/docker-ansible"
LABEL "org.opencontainers.image.documentation"="https://github.com/cytopia/docker-ansible"
LABEL "org.opencontainers.image.source"="https://github.com/cytopia/docker-ansible"
LABEL "org.opencontainers.image.ref.name"="Ansible ${VERSION} awsk8s"
LABEL "org.opencontainers.image.title"="Ansible ${VERSION} awsk8s"
LABEL "org.opencontainers.image.description"="Ansible ${VERSION} awsk8s"

COPY --from=builder /usr/lib/python3.6/site-packages/ /usr/lib/python3.6/site-packages/
COPY --from=builder /usr/bin/ansible /usr/bin/ansible
COPY --from=builder /usr/bin/ansible-connection /usr/bin/ansible-connection
COPY --from=builder /usr/bin/yq /usr/bin/yq
COPY --from=builder /usr/bin/aws /usr/bin/aws
COPY --from=builder /usr/bin/aws-iam-authenticator /usr/bin/aws-iam-authenticator
COPY --from=builder /usr/bin/kubectl /usr/bin/kubectl
COPY --from=builder /usr/bin/oc-dynamically-linked /usr/bin/oc-dynamically-linked
COPY --from=builder /usr/bin/oc /usr/bin/oc

ENV \
	MY_USER=ansible \
	MY_GROUP=ansible \
	MY_UID=1000 \
	MY_GID=1000

RUN set -eux \
	&& addgroup -g ${MY_GID} ${MY_GROUP} \
	&& adduser -h /home/ansible -s /bin/bash -G ${MY_GROUP} -D -u ${MY_UID} ${MY_USER} \
	\
	&& mkdir /home/ansible/.gnupg \
	&& chown ansible:ansible /home/ansible/.gnupg \
	&& chmod 0700 /home/ansible/.gnupg \
	\
	&& mkdir /home/ansible/.ssh \
	&& chown ansible:ansible /home/ansible/.ssh \
	&& chmod 0700 /home/ansible/.ssh \
	\
	&& mkdir /home/ansible/.aws \
	&& chown ansible:ansible /home/ansible/.aws \
	&& chmod 0700 /home/ansible/.aws \
	\
	&& mkdir /data \
	&& chown ansible:ansible /data \
	&& chmod 0755 /data \
	\
	&& apk add --no-cache \
		bash \
		git \
		gnupg \
		jq \
		openssh-client \
		python3 \
	\
	&& ln -sf /usr/bin/python3 /usr/bin/python \
	&& ln -sf ansible /usr/bin/ansible-config \
	&& ln -sf ansible /usr/bin/ansible-console \
	&& ln -sf ansible /usr/bin/ansible-doc \
	&& ln -sf ansible /usr/bin/ansible-galaxy \
	&& ln -sf ansible /usr/bin/ansible-inventory \
	&& ln -sf ansible /usr/bin/ansible-playbook \
	&& ln -sf ansible /usr/bin/ansible-pull \
	&& ln -sf ansible /usr/bin/ansible-test \
	&& ln -sf ansible /usr/bin/ansible-vault \
	&& find /usr/lib/ -name '__pycache__' -print0 | xargs -0 -n1 rm -rf \
	&& find /usr/lib/ -name '*.pyc' -print0 | xargs -0 -n1 rm -rf

COPY ./data/docker-entrypoint.sh /docker-entrypoint.sh
WORKDIR /data
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["/bin/bash"]
